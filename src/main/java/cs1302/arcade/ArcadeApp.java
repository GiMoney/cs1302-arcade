package cs1302.arcade;

import java.util.Random;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.shape.Rectangle;
import javafx.scene.control.Button;
import javafx.stage.Stage;
import javafx.event.EventHandler;
import javafx.event.ActionEvent;
import javafx.scene.input.KeyEvent;
import javafx.scene.input.KeyCode;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.paint.Color;
import javafx.scene.text.*;
import javafx.util.Duration;

public class ArcadeApp extends Application {

    HBox hbox = new HBox();
    Group group = new Group();
    
    Arcade2048 scene2048;
    ArcadeSpaceInvaders sceneSpace;

    Random rng = new Random();           // random number generator
    Rectangle r = new Rectangle(20, 20); // some rectangle

    /**
     * Return a mouse event handler that moves to the rectangle to a random
     * position any time a mouse event is generated by the associated node.
     * @return the mouse event handler
     */
    private EventHandler<? super MouseEvent> createMouseHandler() {
	return event -> {
	    System.out.println(event);
	    r.setX(rng.nextDouble() * (640 - r.getWidth()));
	    r.setY(rng.nextDouble() * (480 - r.getHeight()));
	};
    } // createMouseHandler

    /**
     * Return a key event handler that moves to the rectangle to the left
     * or the right depending on what key event is generated by the associated
     * node.
     * @return the key event handler
     */
    private EventHandler<? super KeyEvent> createKeyHandler() {
	return event -> {
	    System.out.println(event);
	    if (event.getCode() == KeyCode.LEFT)  r.setX(r.getX() - 20.0);
	    if (event.getCode() == KeyCode.RIGHT) r.setX(r.getX() + 20.0);
	    // TODO bounds checking
	};
    } // createKeyHandler

    /** {@inheritdoc} */
    @Override
    public void start(Stage stage) {

        /* You are allowed to rewrite this start method, add other methods,
         * files, classes, etc., as needed. This currently contains some
         * simple sample code for mouse and keyboard interactions with a node
         * (rectangle) in a group.
         */
	Rectangle box = new Rectangle(50, -280, 400, 200);
	box.setFill(Color.DARKBLUE);
	Text gi = new Text(-180, 150, "Gi");
	gi.setFont(Font.font("verdana", FontWeight.BOLD, FontPosture.REGULAR, 100));
	gi.setFill(Color.WHITE);
	gi.setStroke(Color.BLACK);
	gi.setStrokeWidth(5);
	Text le = new Text(540, 150, "Le");
	le.setFont(Font.font("verdana", FontWeight.BOLD, FontPosture.REGULAR, 100));
	le.setFill(Color.RED);
	le.setStroke(Color.WHITE);
	le.setStrokeWidth(5);
        Button play2048 = new Button("Play 2048!");
	play2048.setLayoutX(100);
	play2048.setLayoutY(300);
        Button playSpace = new Button("Play Space Invaders!");
	playSpace.setLayoutX(250);
	playSpace.setLayoutY(300);
	group.getChildren().addAll(box, gi, le, play2048, playSpace);
	EventHandler<ActionEvent> handler = e -> {
	    box.setY(box.getY() + 6); //go to 20
	    gi.setX(gi.getX() + 6); //go to 120
	    le.setX(le.getX() - 6); //go to 240
	};
	KeyFrame keyFrame = new KeyFrame(Duration.seconds(0.05), handler);
	Timeline timeline = new Timeline();
	timeline.setCycleCount(50);
	timeline.getKeyFrames().add(keyFrame);
        Scene sceneArcade = new Scene(group, 500, 400);
	sceneArcade.setFill(Color.GRAY);

        play2048.setOnAction(e -> {
                Thread t = new Thread(() -> {
			scene2048 = new Arcade2048(new Board2048(), sceneArcade);
                        Platform.runLater(() -> stage.setScene(scene2048));
                        Platform.runLater(() -> stage.setTitle("2048!"));
                        Platform.runLater(() -> stage.sizeToScene());
                        scene2048.getBoard().requestFocus();
                });
                t.setDaemon(true);
		t.start();
            });

        
        playSpace.setOnAction(e -> {
                Thread t = new Thread(() -> {
			sceneSpace = new ArcadeSpaceInvaders(sceneArcade);
                        Platform.runLater(() -> stage.setScene(sceneSpace));
                        Platform.runLater(() -> stage.setTitle("Space Invaders!"));
                        Platform.runLater(() ->stage.sizeToScene());
                });
                t.setDaemon(true);
                t.start();
            });
        
        stage.setTitle("Arcade!");
        stage.setScene(sceneArcade);
        stage.sizeToScene();
        stage.show();

	timeline.play();
        
        // the group must request input focus to receive key events
        // @see https://docs.oracle.com/javase/8/javafx/api/javafx/scene/Node.html#requestFocus--
        //group.requestFocus();

    } // start

} // ArcadeApp
